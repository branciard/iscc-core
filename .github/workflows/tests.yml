name: Tests
on: [push, pull_request]

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
        os: [ubuntu-18.04, macos-10.15, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.12

      - name: Downgrade virtualenv
        run: python -m pip install virtualenv==20.10.0 --force-reinstall

      - name: Install Dependencies
        run: poetry install

      - name: Run Tests (Pure Python with coverage)
        run: poetry run pytest --cov=iscc_core --cov-report=xml -q tests

      - name: Build Extension modules
        run: poetry install --extras turbo

      - name: Run Tests (With Extension Modules)
        run: poetry run pytest -q tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

      - name: Build Linux wheels
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64
        if: ${{ runner.os == 'Linux' && matrix.python-version == '3.8'}}
        with:
          python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          build-requirements: 'cython'

      - name: Build MacOS wheels
        if: ${{ runner.os == 'macOS' }}
        run: |
          poetry build -f wheel
          poetry run python -m pip install -U pip
          poetry run python -m pip install delocate
          poetry run delocate-wheel -v dist/*-macosx*.whl

      - name: Build Windows wheels
        if: ${{ runner.os != 'Windows'}}
        run: poetry build -f wheel

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*.whl
